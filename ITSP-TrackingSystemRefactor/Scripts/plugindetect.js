/*
PluginDetect v0.9.1
www.pinlady.net/PluginDetect/license/
[ Shockwave ]
[ isMinVersion getVersion hasMimeType ]
[ AllowActiveX ]
*/
(function () { var j = { version: "0.9.1", name: "PluginDetect", addPlugin: function (p, q) { if (p && j.isString(p) && q && j.isFunc(q.getVersion)) { p = p.replace(/\s/g, "").toLowerCase(); j.Plugins[p] = q; if (!j.isDefined(q.getVersionDone)) { q.installed = null; q.version = null; q.version0 = null; q.getVersionDone = null; q.pluginName = p; } } }, uniqueName: function () { return j.name + "998" }, openTag: "<", hasOwnPROP: ({}).constructor.prototype.hasOwnProperty, hasOwn: function (s, t) { var p; try { p = j.hasOwnPROP.call(s, t) } catch (q) { } return !!p }, rgx: { str: /string/i, num: /number/i, fun: /function/i, arr: /array/i }, toString: ({}).constructor.prototype.toString, isDefined: function (p) { return typeof p != "undefined" }, isArray: function (p) { return j.rgx.arr.test(j.toString.call(p)) }, isString: function (p) { return j.rgx.str.test(j.toString.call(p)) }, isNum: function (p) { return j.rgx.num.test(j.toString.call(p)) }, isStrNum: function (p) { return j.isString(p) && (/\d/).test(p) }, isFunc: function (p) { return j.rgx.fun.test(j.toString.call(p)) }, getNumRegx: /[\d][\d\.\_,\-]*/, splitNumRegx: /[\.\_,\-]/g, getNum: function (q, r) { var p = j.isStrNum(q) ? (r && j.isString(r) ? new RegExp(r) : j.getNumRegx).exec(q) : null; return p ? p[0] : null }, compareNums: function (w, u, t) { var s, r, q, v = parseInt; if (j.isStrNum(w) && j.isStrNum(u)) { if (j.isDefined(t) && t.compareNums) { return t.compareNums(w, u) } s = w.split(j.splitNumRegx); r = u.split(j.splitNumRegx); for (q = 0; q < Math.min(s.length, r.length) ; q++) { if (v(s[q], 10) > v(r[q], 10)) { return 1 } if (v(s[q], 10) < v(r[q], 10)) { return -1 } } } return 0 }, formatNum: function (q, r) { var p, s; if (!j.isStrNum(q)) { return null } if (!j.isNum(r)) { r = 4 } r--; s = q.replace(/\s/g, "").split(j.splitNumRegx).concat(["0", "0", "0", "0"]); for (p = 0; p < 4; p++) { if (/^(0+)(.+)$/.test(s[p])) { s[p] = RegExp.$2 } if (p > r || !(/\d/).test(s[p])) { s[p] = "0" } } return s.slice(0, 4).join(",") }, pd: { getPROP: function (s, q, p) { try { if (s) { p = s[q] } } catch (r) { this.errObj = r; } return p }, findNavPlugin: function (u) { if (u.dbug) { return u.dbug } var A = null; if (window.navigator) { var z = { Find: j.isString(u.find) ? new RegExp(u.find, "i") : u.find, Find2: j.isString(u.find2) ? new RegExp(u.find2, "i") : u.find2, Avoid: u.avoid ? (j.isString(u.avoid) ? new RegExp(u.avoid, "i") : u.avoid) : 0, Num: u.num ? /\d/ : 0 }, s, r, t, y, x, q, p = navigator.mimeTypes, w = navigator.plugins; if (u.mimes && p) { y = j.isArray(u.mimes) ? [].concat(u.mimes) : (j.isString(u.mimes) ? [u.mimes] : []); for (s = 0; s < y.length; s++) { r = 0; try { if (j.isString(y[s]) && /[^\s]/.test(y[s])) { r = p[y[s]].enabledPlugin } } catch (v) { } if (r) { t = this.findNavPlugin_(r, z); if (t.obj) { A = t.obj } if (A && !j.dbug) { return A } } } } if (u.plugins && w) { x = j.isArray(u.plugins) ? [].concat(u.plugins) : (j.isString(u.plugins) ? [u.plugins] : []); for (s = 0; s < x.length; s++) { r = 0; try { if (x[s] && j.isString(x[s])) { r = w[x[s]] } } catch (v) { } if (r) { t = this.findNavPlugin_(r, z); if (t.obj) { A = t.obj } if (A && !j.dbug) { return A } } } q = w.length; if (j.isNum(q)) { for (s = 0; s < q; s++) { r = 0; try { r = w[s] } catch (v) { } if (r) { t = this.findNavPlugin_(r, z); if (t.obj) { A = t.obj } if (A && !j.dbug) { return A } } } } } } return A }, findNavPlugin_: function (t, s) { var r = t.description || "", q = t.name || "", p = {}; if ((s.Find.test(r) && (!s.Find2 || s.Find2.test(q)) && (!s.Num || s.Num.test(RegExp.leftContext + RegExp.rightContext))) || (s.Find.test(q) && (!s.Find2 || s.Find2.test(r)) && (!s.Num || s.Num.test(RegExp.leftContext + RegExp.rightContext)))) { if (!s.Avoid || !(s.Avoid.test(r) || s.Avoid.test(q))) { p.obj = t } } return p }, getVersionDelimiter: ",", findPlugin: function (r) { var q, p = { status: -3, plugin: 0 }; if (!j.isString(r)) { return p } if (r.length == 1) { this.getVersionDelimiter = r; return p } r = r.toLowerCase().replace(/\s/g, ""); q = j.Plugins[r]; if (!q || !q.getVersion) { return p } p.plugin = q; p.status = 1; return p } }, getPluginFileVersion: function (s, u, w, r) { var p, q, v, y, t = -1; if (!s) { return u } r = r || "version"; if (s[r]) { p = j.getNum(s[r] + "", w) } if (!p || !u) { return u || p || null } q = (j.formatNum(u)).split(j.splitNumRegx); v = (j.formatNum(p)).split(j.splitNumRegx); for (y = 0; y < q.length; y++) { if (t > -1 && y > t && q[y] != "0") { return u } if (v[y] != q[y]) { if (t == -1) { t = y } if (q[y] != "0") { return u } } } return p }, AXO: (function () { var q; try { q = new window.ActiveXObject() } catch (p) { } return q ? null : window.ActiveXObject })(), getAXO: function (p) { var r = null; try { r = new j.AXO(p) } catch (q) { j.errObj = q; } if (r) { j.browser.ActiveXEnabled = !0 } return r }, browser: { detectPlatform: function () { var r = this, q, p = window.navigator ? navigator.platform || "" : ""; j.OS = 100; if (p) { var s = ["Win", 1, "Mac", 2, "Linux", 3, "FreeBSD", 4, "iPhone", 21.1, "iPod", 21.2, "iPad", 21.3, "Win.*CE", 22.1, "Win.*Mobile", 22.2, "Pocket\\s*PC", 22.3, "", 100]; for (q = s.length - 2; q >= 0; q = q - 2) { if (s[q] && new RegExp(s[q], "i").test(p)) { j.OS = s[q + 1]; break } } } }, detectIE: function () { var r = this, u = document, t, q, v = window.navigator ? navigator.userAgent || "" : "", w, p, y; r.ActiveXFilteringEnabled = !1; r.ActiveXEnabled = !1; try { r.ActiveXFilteringEnabled = !!window.external.msActiveXFilteringEnabled() } catch (s) { } p = ["Msxml2.XMLHTTP", "Msxml2.DOMDocument", "Microsoft.XMLDOM", "TDCCtl.TDCCtl", "Shell.UIHelper", "HtmlDlgSafeHelper.HtmlDlgSafeHelper", "Scripting.Dictionary"]; y = ["WMPlayer.OCX", "ShockwaveFlash.ShockwaveFlash", "AgControl.AgControl"]; w = p.concat(y); for (t = 0; t < w.length; t++) { if (j.getAXO(w[t]) && !j.dbug) { break } } if (r.ActiveXEnabled && r.ActiveXFilteringEnabled) { for (t = 0; t < y.length; t++) { if (j.getAXO(y[t])) { r.ActiveXFilteringEnabled = !1; break } } } q = u.documentMode; try { u.documentMode = "" } catch (s) { } r.isIE = r.ActiveXEnabled; r.isIE = r.isIE || j.isNum(u.documentMode) || new Function("return/*@cc_on!@*/!1")(); try { u.documentMode = q } catch (s) { } r.verIE = null; if (r.isIE) { r.verIE = (j.isNum(u.documentMode) && u.documentMode >= 7 ? u.documentMode : 0) || ((/^(?:.*?[^a-zA-Z])??(?:MSIE|rv\s*\:)\s*(\d+\.?\d*)/i).test(v) ? parseFloat(RegExp.$1, 10) : 7) } }, detectNonIE: function () { var q = this, p = 0, t = window.navigator ? navigator : {}, s = q.isIE ? "" : t.userAgent || "", u = t.vendor || "", r = t.product || ""; q.isGecko = !p && (/Gecko/i).test(r) && (/Gecko\s*\/\s*\d/i).test(s); p = p || q.isGecko; q.verGecko = q.isGecko ? j.formatNum((/rv\s*\:\s*([\.\,\d]+)/i).test(s) ? RegExp.$1 : "0.9") : null; q.isOpera = !p && (/(OPR\s*\/|Opera\s*\/\s*\d.*\s*Version\s*\/|Opera\s*[\/]?)\s*(\d+[\.,\d]*)/i).test(s); p = p || q.isOpera; q.verOpera = q.isOpera ? j.formatNum(RegExp.$2) : null; q.isEdge = !p && (/(Edge)\s*\/\s*(\d[\d\.]*)/i).test(s); p = p || q.isEdge; q.verEdgeHTML = q.isEdge ? j.formatNum(RegExp.$2) : null; q.isChrome = !p && (/(Chrome|CriOS)\s*\/\s*(\d[\d\.]*)/i).test(s); p = p || q.isChrome; q.verChrome = q.isChrome ? j.formatNum(RegExp.$2) : null; q.isSafari = !p && ((/Apple/i).test(u) || !u) && (/Safari\s*\/\s*(\d[\d\.]*)/i).test(s); p = p || q.isSafari; q.verSafari = q.isSafari && (/Version\s*\/\s*(\d[\d\.]*)/i).test(s) ? j.formatNum(RegExp.$1) : null; }, init: function () { var p = this; p.detectPlatform(); p.detectIE(); p.detectNonIE() } }, init: { hasRun: 0, library: function () { window[j.name] = j; var q = this, p = document; j.head = p.getElementsByTagName("head")[0] || p.getElementsByTagName("body")[0] || p.body || null; j.browser.init(); q.hasRun = 1; } }, isMinVersion: function (v, u, r, q) { var s = j.pd.findPlugin(v), t, p = -1; if (s.status < 0) { return s.status } t = s.plugin; u = j.formatNum(j.isNum(u) ? u.toString() : (j.isStrNum(u) ? j.getNum(u) : "0")); if (t.getVersionDone != 1) { t.getVersion(u, r, q); if (t.getVersionDone === null) { t.getVersionDone = 1 } } if (t.installed !== null) { p = t.installed <= 0.5 ? t.installed : (t.installed == 0.7 ? 1 : (t.version === null ? 0 : (j.compareNums(t.version, u, t) >= 0 ? 1 : -0.1))) } return p }, getVersion: function (u, r, q) { var s = j.pd.findPlugin(u), t, p; if (s.status < 0) { return null } t = s.plugin; if (t.getVersionDone != 1) { t.getVersion(null, r, q); if (t.getVersionDone === null) { t.getVersionDone = 1 } } p = (t.version || t.version0); p = p ? p.replace(j.splitNumRegx, j.pd.getVersionDelimiter) : p; return p }, hasMimeType: function (t) { if (t && window.navigator && navigator.mimeTypes) { var w, v, q, s, p = navigator.mimeTypes, r = j.isArray(t) ? [].concat(t) : (j.isString(t) ? [t] : []); s = r.length; for (q = 0; q < s; q++) { w = 0; try { if (j.isString(r[q]) && /[^\s]/.test(r[q])) { w = p[r[q]] } } catch (u) { } v = w ? w.enabledPlugin : 0; if (v && (v.name || v.description)) { return w } } } return null }, Plugins: {} }; j.init.library(); var k = { getVersion: function () { var r = this, p = null, q; if ((!q || j.dbug) && r.nav.query().installed) { q = 1 } if ((!p || j.dbug) && r.nav.query().version) { p = r.nav.version } if ((!q || j.dbug) && r.axo.query().installed) { q = 1 } if ((!p || j.dbug) && r.axo.query().version) { p = r.axo.version } r.installed = p ? 1 : (q ? 0 : -1); r.version = j.formatNum(p) }, nav: { hasRun: 0, installed: 0, version: null, mimeType: "application/x-director", query: function () { var s = this, p, r, q = s.hasRun || !j.hasMimeType(s.mimeType); s.hasRun = 1; if (q) { return s } r = j.pd.findNavPlugin({ find: "Shockwave\\s*for\\s*Director", mimes: s.mimeType, plugins: "Shockwave for Director" }); if (r && r.description) { p = j.getNum(r.description + "") } if (p) { p = j.getPluginFileVersion(r, p) } if (r) { s.installed = 1 } if (p) { s.version = p } return s } }, axo: { hasRun: 0, installed: null, version: null, progID: ["SWCtl.SWCtl", "SWCtl.SWCtl.1", "SWCtl.SWCtl.7", "SWCtl.SWCtl.8", "SWCtl.SWCtl.11", "SWCtl.SWCtl.12"], classID: "clsid:166B1BCA-3F9C-11CF-8075-444553540000", query: function () { var t = this, v, p, q, w, s, r = !t.hasRun; t.hasRun = 1; if (r) { for (p = 0; p < t.progID.length; p++) { v = j.getAXO(t.progID[p]); if (v) { t.installed = 1; w = ""; try { w = v.ShockwaveVersion("") + ""; } catch (u) { } if ((/(\d[\d\.\,]*)(?:\s*r\s*(\d+))?/i).test(w)) { s = RegExp.$2; q = j.formatNum(RegExp.$1); if (s) { q = q.split(j.splitNumRegx); q[3] = s; q = q.join(",") } } if (q) { t.version = q; if (!j.dbug) { break } } } } } return t } } }; j.addPlugin("shockwave", k); })();