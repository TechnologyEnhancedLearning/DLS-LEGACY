<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Notifications" targetNamespace="http://tempuri.org/Notifications.xsd" xmlns:mstns="http://tempuri.org/Notifications.xsd" xmlns="http://tempuri.org/Notifications.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="csITSPDB" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="csITSPDB (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ITSP_TrackingSystemRefactor.My.MySettings.GlobalReference.Default.csITSPDB" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="NotificationUsersTableAdapter" GeneratorDataComponentClassName="NotificationUsersTableAdapter" Name="NotificationUsers" UserDataComponentName="NotificationUsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.NotificationUsers" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT NotificationUserID, NotificationID, AdminUserID, CandidateID
FROM     NotificationUsers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NotificationUserID" DataSetColumn="NotificationUserID" />
              <Mapping SourceColumn="NotificationID" DataSetColumn="NotificationID" />
              <Mapping SourceColumn="AdminUserID" DataSetColumn="AdminUserID" />
              <Mapping SourceColumn="CandidateID" DataSetColumn="CandidateID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteByAdminUserID" Modifier="Public" Name="DeleteByAdminUserID" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteByAdminUserID">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM NotificationUsers WHERE (NotificationID = @NotificationID) AND (AdminUserID = @AdminUserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="NotificationID" ColumnName="NotificationID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="NotificationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="AdminUserID" ColumnName="AdminUserID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AdminUserID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AdminUserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteByCandidateID" Modifier="Public" Name="DeleteByCandidateID" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteByCandidateID">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM NotificationUsers WHERE (NotificationID = @NotificationID) AND (CandidateID = @CandidateID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="NotificationID" ColumnName="NotificationID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="NotificationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="CandidateID" ColumnName="CandidateID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CandidateID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CandidateID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.NotificationUsers" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetAllAdminUsersForNotificationAtCentre" GetMethodModifier="Public" GetMethodName="GetAllAdminUsersForNotificationAtCentre" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetAllAdminUsersForNotificationAtCentre" UserSourceName="GetAllAdminUsersForNotificationAtCentre">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT NotificationUsers.NotificationUserID, NotificationUsers.NotificationID, NotificationUsers.AdminUserID, NotificationUsers.CandidateID
FROM     NotificationUsers INNER JOIN
                  AdminUsers ON NotificationUsers.AdminUserID = AdminUsers.AdminID
WHERE  (NotificationUsers.NotificationID = @NotificationID) AND (AdminUsers.CentreID = @CentreID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="NotificationID" ColumnName="NotificationID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="NotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CentreID" ColumnName="CentreID" DataSourceName="mbdbx101.dbo.AdminUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CentreID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CentreID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.NotificationUsers" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetAllUsersForNotification" GetMethodModifier="Public" GetMethodName="GetAllUsersForNotification" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetAllUsersForNotification" UserSourceName="GetAllUsersForNotification">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT NotificationUserID, NotificationID, AdminUserID, CandidateID
FROM     NotificationUsers
WHERE NotificationID = @NotificationID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="NotificationID" ColumnName="NotificationID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="NotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="GetNotificationForAdminUserID" Modifier="Public" Name="GetNotificationForAdminUserID" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="GetNotificationForAdminUserID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM NotificationUsers WHERE NotificationID = @NotificationID AND AdminUserID = @AdminUserID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="NotificationID" ColumnName="NotificationID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="NotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="AdminUserID" ColumnName="AdminUserID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AdminUserID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AdminUserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="GetNotificationForCandidate" Modifier="Public" Name="GetNotificationForCandidate" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="GetNotificationForCandidate">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM NotificationUsers WHERE NotificationID = @NotificationID AND CandidateID = @CandidateID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="NotificationID" ColumnName="NotificationID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="NotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="CandidateID" ColumnName="CandidateID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CandidateID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CandidateID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.InsertAdminUserNotificationIfNotExists" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="InsertAdminUserNotificationIfNotExists" Modifier="Public" Name="InsertAdminUserNotificationIfNotExists" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="InsertAdminUserNotificationIfNotExists">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.InsertAdminUserNotificationIfNotExists</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AdminUserID" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotificationID" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.InsertCandidateNotificationIfNotExists" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="InsertCandidateNotificationIfNotExists" Modifier="Public" Name="InsertCandidateNotificationIfNotExists" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="InsertCandidateNotificationIfNotExists">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.InsertCandidateNotificationIfNotExists</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CandidateID" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotificationID" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersForNotificationTableAdapter" GeneratorDataComponentClassName="UsersForNotificationTableAdapter" Name="UsersForNotification" UserDataComponentName="UsersForNotificationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COALESCE (c.EmailAddress, au.Email) AS Email
FROM     NotificationUsers AS nu LEFT OUTER JOIN
                  AdminUsers AS au ON nu.AdminUserID = au.AdminID AND au.Active = 1 LEFT OUTER JOIN
                  Candidates AS c ON nu.CandidateID = c.CandidateID AND c.Active = 1
WHERE  (nu.NotificationID = @NotificationID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="NotificationID" ColumnName="NotificationID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="NotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetByCentre" GetMethodModifier="Public" GetMethodName="GetByCentre" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetByCentre" UserSourceName="GetByCentre">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COALESCE (c.EmailAddress, au.Email) AS Email
FROM     NotificationUsers AS nu LEFT OUTER JOIN
                  AdminUsers AS au ON nu.AdminUserID = au.AdminID AND au.Active = 1 LEFT OUTER JOIN
                  Candidates AS c ON nu.CandidateID = c.CandidateID AND c.Active = 1
WHERE  (nu.NotificationID = @NotificationID) AND (au.CentreID = @CentreID OR c.CentreID = @CentreID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="NotificationID" ColumnName="NotificationID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="NotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CentreID" ColumnName="CentreID" DataSourceName="mbdbx101.dbo.AdminUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CentreID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CentreID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="NotificationsTableAdapter" GeneratorDataComponentClassName="NotificationsTableAdapter" Name="Notifications" UserDataComponentName="NotificationsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.Notifications" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        n.NotificationID, n.NotificationName, n.Description, CAST((SELECT COUNT(NotificationUserID) FROM NotificationUsers WHERE NotificationID = n.NotificationID AND CandidateID = @CandidateID) AS Bit) AS UserSubscribed,  [dbo].[RolesForNotificationCSV] (
   n.NotificationID) AS RolesList
FROM            Notifications AS n INNER JOIN
                         NotificationRoles AS nr ON n.NotificationID = nr.NotificationID
WHERE				nr.RoleID = 5	
						 GROUP BY n.NotificationID, n.NotificationName, n.Description</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="CandidateID" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CandidateID" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NotificationID" DataSetColumn="NotificationID" />
              <Mapping SourceColumn="NotificationName" DataSetColumn="NotificationName" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="UserSubscribed" DataSetColumn="UserSubscribed" />
              <Mapping SourceColumn="RolesList" DataSetColumn="RolesList" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.GetNotificationsForAdminUser" DbObjectType="StoredProcedure" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByAdminUser" GetMethodModifier="Public" GetMethodName="GetDataByAdminUser" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByAdminUser" UserSourceName="GetDataByAdminUser">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.GetNotificationsForAdminUser</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AdminUserID" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.GetNotificationsForCandidate" DbObjectType="StoredProcedure" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByCandidate" GetMethodModifier="Public" GetMethodName="GetDataByCandidate" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByCandidate" UserSourceName="GetDataByCandidate">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.GetNotificationsForCandidate</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CandidateID" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SANotificationsTableAdapter" GeneratorDataComponentClassName="SANotificationsTableAdapter" Name="SANotifications" UserDataComponentName="SANotificationsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.SANotifications" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [SANotifications] WHERE (([SANotificationID] = @Original_SANotificationID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SANotificationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SANotificationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [SANotifications] ([SubjectLine], [BodyHTML], [ExpiryDate], [DateAdded], [TargetUserRoleID]) VALUES (@SubjectLine, @BodyHTML, @ExpiryDate, @DateAdded, @TargetUserRoleID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SubjectLine" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SubjectLine" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BodyHTML" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BodyHTML" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ExpiryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ExpiryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@DateAdded" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="DateAdded" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TargetUserRoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TargetUserRoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SANotificationID, SubjectLine, BodyHTML, ExpiryDate, DateAdded, TargetUserRoleID
FROM     SANotifications AS SAN</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [SANotifications] SET [SubjectLine] = @SubjectLine, [BodyHTML] = @BodyHTML, [ExpiryDate] = @ExpiryDate, [DateAdded] = @DateAdded, [TargetUserRoleID] = @TargetUserRoleID WHERE (([SANotificationID] = @Original_SANotificationID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SubjectLine" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SubjectLine" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BodyHTML" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BodyHTML" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ExpiryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ExpiryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@DateAdded" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="DateAdded" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TargetUserRoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TargetUserRoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SANotificationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SANotificationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SANotificationID" DataSetColumn="SANotificationID" />
              <Mapping SourceColumn="SubjectLine" DataSetColumn="SubjectLine" />
              <Mapping SourceColumn="BodyHTML" DataSetColumn="BodyHTML" />
              <Mapping SourceColumn="ExpiryDate" DataSetColumn="ExpiryDate" />
              <Mapping SourceColumn="DateAdded" DataSetColumn="DateAdded" />
              <Mapping SourceColumn="TargetUserRoleID" DataSetColumn="TargetUserRoleID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="AcknowledgeQuery" Modifier="Public" Name="AcknowledgeQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="AcknowledgeQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO SANotificationAcknowledgements
                  (SANotificationID, AdminUserID)
VALUES (@Original_SANotificationID,@AdminUserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_SANotificationID" ColumnName="SANotificationID" DataSourceName="mbdbx101.dbo.SANotificationAcknowledgements" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_SANotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SANotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AdminUserID" ColumnName="AdminUserID" DataSourceName="mbdbx101.dbo.SANotificationAcknowledgements" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AdminUserID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AdminUserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.SANotifications" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetByID" GetMethodModifier="Public" GetMethodName="GetByID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetByID" UserSourceName="GetByID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SANotificationID, SubjectLine, BodyHTML, ExpiryDate, DateAdded, TargetUserRoleID
FROM     SANotifications AS SAN
WHERE SANotificationID = @SANotificationID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SANotificationID" ColumnName="SANotificationID" DataSourceName="mbdbx101.dbo.SANotifications" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SANotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SANotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.SANotifications" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetFiltered" GetMethodModifier="Public" GetMethodName="GetFiltered" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetFiltered" UserSourceName="GetFiltered">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT BodyHTML, DateAdded, ExpiryDate, SANotificationID, SubjectLine, TargetUserRoleID FROM SANotifications AS SAN WHERE (ExpiryDate IS NULL) OR (ExpiryDate &gt;= GETDATE()) OR (CAST(@IncExpired AS Bit) = 1) ORDER BY DateAdded DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="IncExpired" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Boolean" Direction="Input" ParameterName="@IncExpired" Precision="0" ProviderType="Bit" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.SANotifications" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetForAdminUserID" GetMethodModifier="Public" GetMethodName="GetForAdminUserID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetForAdminUserID" UserSourceName="GetForAdminUserID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT BodyHTML, DateAdded, ExpiryDate, SANotificationID, SubjectLine, TargetUserRoleID
FROM     SANotifications
WHERE  (SANotificationID NOT IN
                      (SELECT SANotificationID
                       FROM      SANotificationAcknowledgements
                       WHERE   (AdminUserID = @AdminUserID))) AND (ExpiryDate IS NULL) OR
                  (SANotificationID NOT IN
                      (SELECT SANotificationID
                       FROM      SANotificationAcknowledgements AS ack
                       WHERE   (AdminUserID = @AdminUserID))) AND (ExpiryDate &gt; GETDATE())
ORDER BY DateAdded DESC</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AdminUserID" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AdminUserID" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO SANotifications
                  (SubjectLine, BodyHTML, ExpiryDate, TargetUserRoleID)
VALUES (@SubjectLine,@BodyHTML,@ExpiryDate,@TargetUserRoleID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SubjectLine" ColumnName="SubjectLine" DataSourceName="mbdbx101.dbo.SANotifications" DataTypeServer="nvarchar(100)" DbType="String" Direction="Input" ParameterName="@SubjectLine" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumn="SubjectLine" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="BodyHTML" ColumnName="BodyHTML" DataSourceName="mbdbx101.dbo.SANotifications" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@BodyHTML" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="BodyHTML" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="ExpiryDate" ColumnName="ExpiryDate" DataSourceName="mbdbx101.dbo.SANotifications" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@ExpiryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="ExpiryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TargetUserRoleID" ColumnName="TargetUserRoleID" DataSourceName="mbdbx101.dbo.SANotifications" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TargetUserRoleID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TargetUserRoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.InsertSANotification" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="InsertSANotification" Modifier="Public" Name="InsertSANotification" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="InsertSANotification">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.InsertSANotification</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@SubjectLine" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@BodyHTML" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@ExpiryDate" Precision="23" ProviderType="DateTime" Scale="3" Size="8" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TargetUserRoleID" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE SANotifications
SET          SubjectLine = @SubjectLine, BodyHTML = @BodyHTML, ExpiryDate = @ExpiryDate
WHERE  (SANotificationID = @Original_SANotificationID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SubjectLine" ColumnName="SubjectLine" DataSourceName="mbdbx101.dbo.SANotifications" DataTypeServer="nvarchar(100)" DbType="String" Direction="Input" ParameterName="@SubjectLine" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumn="SubjectLine" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="BodyHTML" ColumnName="BodyHTML" DataSourceName="mbdbx101.dbo.SANotifications" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@BodyHTML" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="BodyHTML" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="ExpiryDate" ColumnName="ExpiryDate" DataSourceName="mbdbx101.dbo.SANotifications" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@ExpiryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="ExpiryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_SANotificationID" ColumnName="SANotificationID" DataSourceName="mbdbx101.dbo.SANotifications" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_SANotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SANotificationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SANotificationAcknowledgementsTableAdapter" GeneratorDataComponentClassName="SANotificationAcknowledgementsTableAdapter" Name="SANotificationAcknowledgements" UserDataComponentName="SANotificationAcknowledgementsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.SANotificationAcknowledgements" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [SANotificationAcknowledgements] WHERE (([AcknolwedgementID] = @Original_AcknolwedgementID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AcknolwedgementID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AcknolwedgementID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [SANotificationAcknowledgements] ([SANotificationID], [AdminUserID]) VALUES (@SANotificationID, @AdminUserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SANotificationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SANotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AdminUserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AdminUserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT AcknolwedgementID, SANotificationID, AdminUserID
FROM     SANotificationAcknowledgements
WHERE  (SANotificationID = @SANotificationID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SANotificationID" ColumnName="SANotificationID" DataSourceName="mbdbx101.dbo.SANotificationAcknowledgements" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SANotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SANotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [SANotificationAcknowledgements] SET [SANotificationID] = @SANotificationID, [AdminUserID] = @AdminUserID WHERE (([AcknolwedgementID] = @Original_AcknolwedgementID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SANotificationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SANotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AdminUserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AdminUserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AcknolwedgementID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AcknolwedgementID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AcknolwedgementID" DataSetColumn="AcknolwedgementID" />
              <Mapping SourceColumn="SANotificationID" DataSetColumn="SANotificationID" />
              <Mapping SourceColumn="AdminUserID" DataSetColumn="AdminUserID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO SANotificationAcknowledgements
                  (SANotificationID, AdminUserID)
VALUES (@SANotificationID,@AdminUserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SANotificationID" ColumnName="SANotificationID" DataSourceName="mbdbx101.dbo.SANotificationAcknowledgements" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SANotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SANotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AdminUserID" ColumnName="AdminUserID" DataSourceName="mbdbx101.dbo.SANotificationAcknowledgements" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AdminUserID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AdminUserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserRolesTableAdapter" GeneratorDataComponentClassName="UserRolesTableAdapter" Name="UserRoles" UserDataComponentName="UserRolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.UserRoles" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT RoleID, Role
FROM     UserRoles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoleID" DataSetColumn="RoleID" />
              <Mapping SourceColumn="Role" DataSetColumn="Role" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.UserRoles" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetAdminRoles" GetMethodModifier="Public" GetMethodName="GetAdminRoles" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetAdminRoles" UserSourceName="GetAdminRoles">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT RoleID, Role
FROM     UserRoles
WHERE  (RoleID &lt; 5)</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AdminUsersForSANTableAdapter" GeneratorDataComponentClassName="AdminUsersForSANTableAdapter" Name="AdminUsersForSAN" UserDataComponentName="AdminUsersForSANTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.AdminUsers" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT AdminID
		,Forename
		,Surname
		,Email
	FROM AdminUsers AS AU
	INNER JOIN NotificationUsers NU ON AU.AdminID = NU.AdminUserID
	WHERE NU.NotificationID = 1
		AND (
			(@TargetUserRoleID = 1)
			OR (
				AU.IsCentreManager = 1
				AND @TargetUserRoleID = 2
				)
			OR (
				AU.ContentManager = 1
				AND @TargetUserRoleID = 3
				)
			OR (
				AU.ContentCreator = 1
				AND @TargetUserRoleID = 4
				)
			)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="TargetUserRoleID" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@TargetUserRoleID" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AdminID" DataSetColumn="AdminID" />
              <Mapping SourceColumn="Forename" DataSetColumn="Forename" />
              <Mapping SourceColumn="Surname" DataSetColumn="Surname" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="CheckNotificationForUser" MethodsParameterType="CLR" Modifier="Public" Name="CheckNotificationForUser" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="CheckNotificationForUser">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(*) AS NU
FROM     NotificationUsers
WHERE  (NotificationID = @NotificationID) AND ((CandidateID = @UserID) OR (AdminUserID = @UserID))</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="NotificationID" ColumnName="NotificationID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NotificationID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="NotificationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="UserID" ColumnName="CandidateID" DataSourceName="mbdbx101.dbo.NotificationUsers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CandidateID" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="mbdbx101.dbo.UserRoles" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="GetUserRoleByID" MethodsParameterType="CLR" Modifier="Public" Name="GetUserRoleByID" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="GetUserRoleByID">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT [Role]
	FROM UserRoles
	WHERE RoleID = @RoleID</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="RoleID" ColumnName="RoleID" DataSourceName="mbdbx101.dbo.UserRoles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="GetNumberOfNotificationsForAU" MethodsParameterType="CLR" Modifier="Public" Name="GetNumberOfNotificationsForAU" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="GetNumberOfNotificationsForAU">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(*) FROM SANotifications WHERE (SANotificationID NOT IN (SELECT SANotificationID FROM SANotificationAcknowledgements WHERE (AdminUserID = @AdminUserID))) AND (ExpiryDate IS NULL) OR (SANotificationID NOT IN (SELECT SANotificationID FROM SANotificationAcknowledgements AS ack WHERE (AdminUserID = @AdminUserID))) AND (ExpiryDate &gt; GETDATE())</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="AdminUserID" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AdminUserID" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="GetNotifyEmailForCentre" MethodsParameterType="CLR" Modifier="Public" Name="GetNotifyEmailForCentre" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="GetNotifyEmailForCentre">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COALESCE(NotifyEmail, '') As NotifyEmail
FROM     Centres
WHERE  (CentreID = @CentreID)</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="CentreID" ColumnName="CentreID" DataSourceName="mbdbx101.dbo.Centres" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CentreID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CentreID" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="csITSPDB (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertEmailOutMessage" MethodsParameterType="CLR" Modifier="Public" Name="InsertEmailOutMessage" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="InsertEmailOutMessage">
            <InsertCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>Insert Into EmailOut (EmailTo, EmailFrom, [Subject], BodyHTML, AddedByProcess, Urgent)
		Values (@Email, @_EmailFrom, @_Subject,@_BodyHtml,@ProcessName, @Urgent)</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="Email" ColumnName="EmailTo" DataSourceName="mbdbx101.dbo.EmailOut" DataTypeServer="nvarchar(255)" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="255" SourceColumn="EmailTo" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="_EmailFrom" ColumnName="EmailFrom" DataSourceName="mbdbx101.dbo.EmailOut" DataTypeServer="nvarchar(255)" DbType="String" Direction="Input" ParameterName="@_EmailFrom" Precision="0" ProviderType="NVarChar" Scale="0" Size="255" SourceColumn="EmailFrom" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="_Subject" ColumnName="Subject" DataSourceName="mbdbx101.dbo.EmailOut" DataTypeServer="nvarchar(255)" DbType="String" Direction="Input" ParameterName="@_Subject" Precision="0" ProviderType="NVarChar" Scale="0" Size="255" SourceColumn="Subject" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="_BodyHtml" ColumnName="BodyHTML" DataSourceName="mbdbx101.dbo.EmailOut" DataTypeServer="nvarchar(MAX)" DbType="String" Direction="Input" ParameterName="@_BodyHtml" Precision="0" ProviderType="NVarChar" Scale="0" Size="2147483647" SourceColumn="BodyHTML" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="ProcessName" ColumnName="AddedByProcess" DataSourceName="mbdbx101.dbo.EmailOut" DataTypeServer="nvarchar(255)" DbType="String" Direction="Input" ParameterName="@ProcessName" Precision="0" ProviderType="NVarChar" Scale="0" Size="255" SourceColumn="AddedByProcess" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="Urgent" ColumnName="Urgent" DataSourceName="mbdbx101.dbo.EmailOut" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@Urgent" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="Urgent" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </InsertCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Notifications" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="Notifications" msprop:Generator_UserDSName="Notifications">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="NotificationUsers" msprop:Generator_TableClassName="NotificationUsersDataTable" msprop:Generator_TableVarName="tableNotificationUsers" msprop:Generator_RowChangedName="NotificationUsersRowChanged" msprop:Generator_TablePropName="NotificationUsers" msprop:Generator_RowDeletingName="NotificationUsersRowDeleting" msprop:Generator_RowChangingName="NotificationUsersRowChanging" msprop:Generator_RowEvHandlerName="NotificationUsersRowChangeEventHandler" msprop:Generator_RowDeletedName="NotificationUsersRowDeleted" msprop:Generator_RowClassName="NotificationUsersRow" msprop:Generator_UserTableName="NotificationUsers" msprop:Generator_RowEvArgName="NotificationUsersRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NotificationUserID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnNotificationUserID" msprop:Generator_ColumnPropNameInRow="NotificationUserID" msprop:Generator_ColumnPropNameInTable="NotificationUserIDColumn" msprop:Generator_UserColumnName="NotificationUserID" type="xs:int" />
              <xs:element name="NotificationID" msprop:Generator_ColumnVarNameInTable="columnNotificationID" msprop:Generator_ColumnPropNameInRow="NotificationID" msprop:Generator_ColumnPropNameInTable="NotificationIDColumn" msprop:Generator_UserColumnName="NotificationID" type="xs:int" />
              <xs:element name="AdminUserID" msprop:Generator_ColumnVarNameInTable="columnAdminUserID" msprop:Generator_ColumnPropNameInRow="AdminUserID" msprop:Generator_ColumnPropNameInTable="AdminUserIDColumn" msprop:Generator_UserColumnName="AdminUserID" type="xs:int" minOccurs="0" />
              <xs:element name="CandidateID" msprop:Generator_ColumnVarNameInTable="columnCandidateID" msprop:Generator_ColumnPropNameInRow="CandidateID" msprop:Generator_ColumnPropNameInTable="CandidateIDColumn" msprop:Generator_UserColumnName="CandidateID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UsersForNotification" msprop:Generator_TableClassName="UsersForNotificationDataTable" msprop:Generator_TableVarName="tableUsersForNotification" msprop:Generator_RowChangedName="UsersForNotificationRowChanged" msprop:Generator_TablePropName="UsersForNotification" msprop:Generator_RowDeletingName="UsersForNotificationRowDeleting" msprop:Generator_RowChangingName="UsersForNotificationRowChanging" msprop:Generator_RowEvHandlerName="UsersForNotificationRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersForNotificationRowDeleted" msprop:Generator_RowClassName="UsersForNotificationRow" msprop:Generator_UserTableName="UsersForNotification" msprop:Generator_RowEvArgName="UsersForNotificationRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Email" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Notifications" msprop:Generator_TableClassName="NotificationsDataTable" msprop:Generator_TableVarName="tableNotifications" msprop:Generator_RowChangedName="NotificationsRowChanged" msprop:Generator_TablePropName="_Notifications" msprop:Generator_RowDeletingName="NotificationsRowDeleting" msprop:Generator_RowChangingName="NotificationsRowChanging" msprop:Generator_RowEvHandlerName="NotificationsRowChangeEventHandler" msprop:Generator_RowDeletedName="NotificationsRowDeleted" msprop:Generator_RowClassName="NotificationsRow" msprop:Generator_UserTableName="Notifications" msprop:Generator_RowEvArgName="NotificationsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NotificationID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnNotificationID" msprop:Generator_ColumnPropNameInRow="NotificationID" msprop:Generator_ColumnPropNameInTable="NotificationIDColumn" msprop:Generator_UserColumnName="NotificationID" type="xs:int" />
              <xs:element name="NotificationName" msprop:Generator_ColumnVarNameInTable="columnNotificationName" msprop:Generator_ColumnPropNameInRow="NotificationName" msprop:Generator_ColumnPropNameInTable="NotificationNameColumn" msprop:Generator_UserColumnName="NotificationName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserSubscribed" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnUserSubscribed" msprop:Generator_ColumnPropNameInRow="UserSubscribed" msprop:Generator_ColumnPropNameInTable="UserSubscribedColumn" msprop:Generator_UserColumnName="UserSubscribed" type="xs:boolean" minOccurs="0" />
              <xs:element name="RolesList" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnRolesList" msprop:Generator_ColumnPropNameInRow="RolesList" msprop:Generator_ColumnPropNameInTable="RolesListColumn" msprop:Generator_UserColumnName="RolesList" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8000" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SANotifications" msprop:Generator_TableClassName="SANotificationsDataTable" msprop:Generator_TableVarName="tableSANotifications" msprop:Generator_TablePropName="SANotifications" msprop:Generator_RowDeletingName="SANotificationsRowDeleting" msprop:Generator_RowChangingName="SANotificationsRowChanging" msprop:Generator_RowEvHandlerName="SANotificationsRowChangeEventHandler" msprop:Generator_RowDeletedName="SANotificationsRowDeleted" msprop:Generator_UserTableName="SANotifications" msprop:Generator_RowChangedName="SANotificationsRowChanged" msprop:Generator_RowEvArgName="SANotificationsRowChangeEvent" msprop:Generator_RowClassName="SANotificationsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SANotificationID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnSANotificationID" msprop:Generator_ColumnPropNameInRow="SANotificationID" msprop:Generator_ColumnPropNameInTable="SANotificationIDColumn" msprop:Generator_UserColumnName="SANotificationID" type="xs:int" />
              <xs:element name="SubjectLine" msprop:Generator_ColumnVarNameInTable="columnSubjectLine" msprop:Generator_ColumnPropNameInRow="SubjectLine" msprop:Generator_ColumnPropNameInTable="SubjectLineColumn" msprop:Generator_UserColumnName="SubjectLine">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BodyHTML" msprop:Generator_ColumnVarNameInTable="columnBodyHTML" msprop:Generator_ColumnPropNameInRow="BodyHTML" msprop:Generator_ColumnPropNameInTable="BodyHTMLColumn" msprop:Generator_UserColumnName="BodyHTML" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ExpiryDate" msprop:Generator_ColumnVarNameInTable="columnExpiryDate" msprop:Generator_ColumnPropNameInRow="ExpiryDate" msprop:Generator_ColumnPropNameInTable="ExpiryDateColumn" msprop:Generator_UserColumnName="ExpiryDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="DateAdded" msprop:Generator_ColumnVarNameInTable="columnDateAdded" msprop:Generator_ColumnPropNameInRow="DateAdded" msprop:Generator_ColumnPropNameInTable="DateAddedColumn" msprop:Generator_UserColumnName="DateAdded" type="xs:dateTime" />
              <xs:element name="TargetUserRoleID" msprop:Generator_ColumnVarNameInTable="columnTargetUserRoleID" msprop:Generator_ColumnPropNameInRow="TargetUserRoleID" msprop:Generator_ColumnPropNameInTable="TargetUserRoleIDColumn" msprop:Generator_UserColumnName="TargetUserRoleID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SANotificationAcknowledgements" msprop:Generator_TableClassName="SANotificationAcknowledgementsDataTable" msprop:Generator_TableVarName="tableSANotificationAcknowledgements" msprop:Generator_TablePropName="SANotificationAcknowledgements" msprop:Generator_RowDeletingName="SANotificationAcknowledgementsRowDeleting" msprop:Generator_RowChangingName="SANotificationAcknowledgementsRowChanging" msprop:Generator_RowEvHandlerName="SANotificationAcknowledgementsRowChangeEventHandler" msprop:Generator_RowDeletedName="SANotificationAcknowledgementsRowDeleted" msprop:Generator_UserTableName="SANotificationAcknowledgements" msprop:Generator_RowChangedName="SANotificationAcknowledgementsRowChanged" msprop:Generator_RowEvArgName="SANotificationAcknowledgementsRowChangeEvent" msprop:Generator_RowClassName="SANotificationAcknowledgementsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AcknolwedgementID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnAcknolwedgementID" msprop:Generator_ColumnPropNameInRow="AcknolwedgementID" msprop:Generator_ColumnPropNameInTable="AcknolwedgementIDColumn" msprop:Generator_UserColumnName="AcknolwedgementID" type="xs:int" />
              <xs:element name="SANotificationID" msprop:Generator_ColumnVarNameInTable="columnSANotificationID" msprop:Generator_ColumnPropNameInRow="SANotificationID" msprop:Generator_ColumnPropNameInTable="SANotificationIDColumn" msprop:Generator_UserColumnName="SANotificationID" type="xs:int" />
              <xs:element name="AdminUserID" msprop:Generator_ColumnVarNameInTable="columnAdminUserID" msprop:Generator_ColumnPropNameInRow="AdminUserID" msprop:Generator_ColumnPropNameInTable="AdminUserIDColumn" msprop:Generator_UserColumnName="AdminUserID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserRoles" msprop:Generator_TableClassName="UserRolesDataTable" msprop:Generator_TableVarName="tableUserRoles" msprop:Generator_RowChangedName="UserRolesRowChanged" msprop:Generator_TablePropName="UserRoles" msprop:Generator_RowDeletingName="UserRolesRowDeleting" msprop:Generator_RowChangingName="UserRolesRowChanging" msprop:Generator_RowEvHandlerName="UserRolesRowChangeEventHandler" msprop:Generator_RowDeletedName="UserRolesRowDeleted" msprop:Generator_RowClassName="UserRolesRow" msprop:Generator_UserTableName="UserRoles" msprop:Generator_RowEvArgName="UserRolesRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoleID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnRoleID" msprop:Generator_ColumnPropNameInRow="RoleID" msprop:Generator_ColumnPropNameInTable="RoleIDColumn" msprop:Generator_UserColumnName="RoleID" type="xs:int" />
              <xs:element name="Role" msprop:Generator_ColumnVarNameInTable="columnRole" msprop:Generator_ColumnPropNameInRow="Role" msprop:Generator_ColumnPropNameInTable="RoleColumn" msprop:Generator_UserColumnName="Role">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="AdminUsersForSAN" msprop:Generator_TableClassName="AdminUsersForSANDataTable" msprop:Generator_TableVarName="tableAdminUsersForSAN" msprop:Generator_RowChangedName="AdminUsersForSANRowChanged" msprop:Generator_TablePropName="AdminUsersForSAN" msprop:Generator_RowDeletingName="AdminUsersForSANRowDeleting" msprop:Generator_RowChangingName="AdminUsersForSANRowChanging" msprop:Generator_RowEvHandlerName="AdminUsersForSANRowChangeEventHandler" msprop:Generator_RowDeletedName="AdminUsersForSANRowDeleted" msprop:Generator_RowClassName="AdminUsersForSANRow" msprop:Generator_UserTableName="AdminUsersForSAN" msprop:Generator_RowEvArgName="AdminUsersForSANRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AdminID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnAdminID" msprop:Generator_ColumnPropNameInRow="AdminID" msprop:Generator_ColumnPropNameInTable="AdminIDColumn" msprop:Generator_UserColumnName="AdminID" type="xs:int" />
              <xs:element name="Forename" msprop:Generator_ColumnVarNameInTable="columnForename" msprop:Generator_ColumnPropNameInRow="Forename" msprop:Generator_ColumnPropNameInTable="ForenameColumn" msprop:Generator_UserColumnName="Forename">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Surname" msprop:Generator_ColumnVarNameInTable="columnSurname" msprop:Generator_ColumnPropNameInRow="Surname" msprop:Generator_ColumnPropNameInTable="SurnameColumn" msprop:Generator_UserColumnName="Surname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:NotificationUsers" />
      <xs:field xpath="mstns:NotificationUserID" />
    </xs:unique>
    <xs:unique name="Notifications_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Notifications" />
      <xs:field xpath="mstns:NotificationID" />
    </xs:unique>
    <xs:unique name="SANotifications_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SANotifications" />
      <xs:field xpath="mstns:SANotificationID" />
    </xs:unique>
    <xs:unique name="SANotificationAcknowledgements_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SANotificationAcknowledgements" />
      <xs:field xpath="mstns:AcknolwedgementID" />
    </xs:unique>
    <xs:unique name="UserRoles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserRoles" />
      <xs:field xpath="mstns:RoleID" />
    </xs:unique>
    <xs:unique name="AdminUsersForSAN_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AdminUsersForSAN" />
      <xs:field xpath="mstns:AdminID" />
    </xs:unique>
  </xs:element>
</xs:schema>